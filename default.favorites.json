{
	"temp": "SELECT Board, Contract, Score_NS, Pct_NS, DD_N_H, DD_Pct_NS, Par_NS, Par_Pct_NS, EV_Max_NS, EV_Max_EW, EV_Max_Col_NS, EV_Max_Col_EW ORDER BY Board",
	"Buttons": {
		"Summarize": {
			"title": "**Summarize**",
			"help": "Summarize the game's results",
			"comment": "@ in prompt means prompt is a key into ['SelectBoxes']['Vetted_Prompts'] list.",
			"prompts": [
				"@About",
				"@Boards_We_Played",
				"@Our_Best_Boards",
				"@Our_Worst_Boards",
				"@Boards_I_Declared",
				"@Boards_Partner_Declared",
				"@Wrong_Side",
				"@We_Got_Gifts",
				"@Rankings_Without_Gifts",
				"@Our_Mistakes",
				"@We_Underbid",
				"@Opponent_Underbid",
				"@We_Fixed_Opponents",
				"@We_Got_Fixed",
				"@Actual_Score_Pcts",
				"@DD_Score_Pcts",
				"@Par_Score_Pcts",
				"@EV_Pcts",
				"@EV_Max_Pcts",
				"@Par_Rankings",
				"@Pct_Per_Round",
				"@Frequency_of_Contracts",
				"@Unique_Bids_All_Boards",
				"@Unique_Bids_We_Played",
				"@Boards_I_Underperformed_DD",
				"@Boards_Partner_Underperformed_DD",
				"@Boards_We_Beat_Par",
				"@Boards_We_Equaled_Par",
				"@Boards_We_Underperformed_Par",
				"@Boards_We_Underperformed_EV",
				"@Expected_Value_Our_Boards",
				"@Expected_Value_All_Boards",
				"@Declarer_Rankings",
				"@Scoring_Errors"
			]
		},
		"Summarize_Briefly": {
			"title": "Summarize Briefly",
			"help": "Summarize the game's results. Expert statistics only.",
			"comment": "@ in prompt means prompt is a key into ['SelectBoxes']['Vetted_Prompts'] list.",
			"prompts": [
				"@About",
				"@Boards_We_Played",
				"@Our_Best_Boards",
				"@Our_Worst_Boards",
				"@Boards_I_Declared",
				"@Boards_Partner_Declared",
				"@We_Got_Gifts",
				"@Our_Mistakes",
				"@Par_Rankings",
				"@Pct_Per_Round"
			]
		},
		"AI_Predictions": {
			"title": "AI Predictions",
			"help": "Show AI Predictions",
			"comment": "@ in prompt means prompt is a key into ['SelectBoxes']['Vetted_Prompts'] list.",
			"prompts": [
				"@About",
				"@Overall_Rankings_Predictions",
				"@Board_Results_Predictions",
				"@Declarer_Direction_Predictions",
				"@Declarer_Direction_Predictions_Statistics_By_Board",
				"@Declarer_Direction_Predictions_Statistics_By_Actual_Declarer",
				"@Declarer_Direction_Predictions_Statistics_By_Predicted_Declarer",
				"@Contract_Predictions_Statistics_By_Boards_We_Played",
				"@Contract_Predictions_Statistics_By_Board",
				"@Contract_Predictions_Statistics_By_Board_By_Contract",
				"@Declarer_Probabilities_Statistics"
			]
		}
	},
	"SelectBoxes": {
		"Vetted_Prompts": {
			"Choose_A_Prompt": {
				"title": "Choose a Prompt",
				"help": "",
				"comment": "placeholder for selectbox",
				"prompts": [
					{
						"prompt": "",
						"sql": ""
					}
				]
			},
			"About": {
				"title": "About",
				"help": "**Showing info about the event, you and your partner.**",
				"comment": "slash commands are dealt with internally.",
				"prompts": [
					{
						"prompt": "/about",
						"sql": ""
					}
				]
			},
			"Boards_We_Played": {
				"title": "Boards You Played",
				"help": "**Showing boards you played.**",
				"comment": "Can't get 2nd prompt to work. Unreliable responses. e.g. Show ROUND(AVG(pct)) from previous prompt.",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct, DD score, tricks, DD tricks. Boards_We_Played=True",
						"sql": "SELECT Board, PBN, Dealer, Vul, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, DD_Score_{Pair_Direction}, Tricks, DD_Tricks, AVG(Pct_{Pair_Direction}) OVER (ORDER BY Board ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as Running_Avg_Pct FROM self WHERE Boards_We_Played = True ORDER BY Board"
					}
				]
			},
			"Our_Best_Boards": {
				"title": "Best boards",
				"help": "**Showing your best boards.**",
				"prompts": [
					{
						"prompt": "Show board, pct, contract, score, Par, Par pct, sd pct. Show those boards I played and pct > .7. Sort by pct descending.",
						"sql": "SELECT Board, Pct_{Pair_Direction}, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction} FROM self WHERE Boards_I_Played = True AND Pct_{Pair_Direction} > .7 ORDER BY Pct_{Pair_Direction} DESC"
					}
				]
			},
			"Our_Worst_Boards": {
				"title": "Worst boards",
				"help": "**Showing your worst boards.**",
				"prompts": [
					{
						"prompt": "Show board, pct, contract, score, Par, Par pct, sd pct. Show those boards I played and pct < .3. Sort by pct ascending.",
						"sql": "SELECT Board, Pct_{Pair_Direction}, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction} FROM self WHERE Boards_I_Played = True AND Pct_{Pair_Direction} < .3 ORDER BY Pct_{Pair_Direction}"
					}
				]
			},
			"Boards_We_Beat_Par": {
				"title": "Boards I beat Par",
				"help": "**Showing boards which you beat Par.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct. Show those boards I played and score > Par.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction} FROM self WHERE Boards_I_Played = True AND Score_{Pair_Direction} > Par_{Pair_Direction} ORDER BY Board"
					}
				]
			},
			"Boards_We_Equaled_Par": {
				"title": "Boards I equaled Par",
				"help": "**Showing boards which you equaled Par.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct. Show those boards I played and score = Par.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction} FROM self WHERE Boards_I_Played = True AND Score_{Pair_Direction} = Par_{Pair_Direction} ORDER BY Board"
					}
				]
			},
			"Boards_We_Underperformed_Par": {
				"title": "Boards I underperformed Par",
				"help": "**Showing boards which you underperformed Par.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct. Show those boards I played and score < Par.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction} FROM self WHERE Boards_I_Played = True AND Score_{Pair_Direction} < Par_{Pair_Direction} ORDER BY Board"
					}
				]
			},
			"Boards_I_Underperformed_DD": {
				"title": "Boards I Underperformed Double Dummy (DD)",
				"help": "**Showing boards you declared which underperformed double dummy (DD).**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct, tricks, DD tricks. Show those boards I declared and tricks < DD tricks.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, Tricks, DD_Tricks FROM self WHERE Boards_I_Declared = True AND Tricks < DD_Tricks ORDER BY Board"
					}
				]
			},
			"Boards_Partner_Underperformed_DD": {
				"title": "Boards Partner Underperformed Double Dummy (DD)",
				"help": "**Showing boards your partner declared which underperformed double dummy (DD).**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct, tricks, DD tricks. Show those boards partner declared and tricks < DD tricks.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, Tricks, DD_Tricks FROM self WHERE Boards_Partner_Declared = True AND Tricks < DD_Tricks ORDER BY Board"
					}
				]
			},
			"Boards_We_Underperformed_Par_Pct": {
				"title": "Boards You Underperformed Par Pct",
				"help": "**Showing boards which underperformed Par percentage.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct, tricks, DD tricks. Show those boards we played and pct < Par pct.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, Tricks, DD_Tricks FROM self WHERE Boards_We_Played = True AND Pct_{Pair_Direction} < Par_Pct_{Pair_Direction} ORDER BY Board"
					}
				]
			},
			"Boards_We_Underperformed_EV": {
				"title": "Boards You Underperformed Expected Value (EV)",
				"help": "**Showing boards we declared which underperformed Expected Value (EV).**",
				"prompts": [
					{
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Max_Col, EV_Max_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, EV_Max_Diff_{Pair_Direction}, EV_Pct_Max_Diff_{Pair_Direction}, DD_Pct_Max_Diff_{Pair_Direction}, DD_EV_Pct_Max_Diff_{Pair_Direction} FROM self WHERE Boards_We_Declared = True AND (Score_{Pair_Direction} < EV_Score_Declarer OR Score_{Pair_Direction} < EV_Max_Declarer) ORDER BY Board"
					}
				]
			},
			"We_Got_Gifts": {
				"title": "We Got Gifts",
				"help": "**Showing boards your partnership declared which your opponents gifted you the contract or tricks.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, pct, Par, tricks, dd tricks, sd score, sd score max, sd contract max. Show those boards we declared and score > Par and score > sd score.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Pct_{Pair_Direction}, Par_{Pair_Direction}, Tricks, DD_Tricks, EV_Max_{Pair_Direction}, EV_Max_{Pair_Direction}, EV_Max_Col FROM self WHERE Boards_We_Declared = True AND Score_{Pair_Direction} > Par_{Pair_Direction} AND Score_{Pair_Direction} > EV_Max_{Pair_Direction} ORDER BY Board"
					}
				]
			},
			"Rankings_Without_Gifts": {
				"title": "Rank after removing gifted boards",
				"help": "**Showing rankings of pairs after removing any gifted boards (NS, EW).**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' - ', Player_Name_S) AS Pair_NS, AVG(CASE WHEN Score_NS <= Par_NS OR Score_NS <= EV_Max_NS THEN Pct_NS ELSE NULL END) AS Avg_Pct_NS, COUNT(CASE WHEN Score_NS <= Par_NS OR Score_NS <= EV_Max_NS THEN 1 ELSE NULL END) AS Board_Count, STRING_AGG(CASE WHEN Score_NS > Par_NS AND Score_NS > EV_Max_NS THEN Board END, ', ') AS Gifted_Boards_Removed FROM self GROUP BY Pair_NS ORDER BY Avg_Pct_NS DESC, Board_Count DESC"
					},
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_EW, ' - ', Player_Name_E, ' - ', Player_Name_W) AS Pair_EW, AVG(CASE WHEN Score_EW <= Par_EW OR Score_EW <= EV_Max_EW THEN Pct_EW ELSE NULL END) AS Avg_Pct_EW, COUNT(CASE WHEN Score_EW <= Par_EW OR Score_EW <= EV_Max_EW THEN 1 ELSE NULL END) AS Board_Count, STRING_AGG(CASE WHEN Score_EW > Par_EW AND Score_EW > EV_Max_EW THEN Board END, ', ') AS Gifted_Boards_Removed FROM self GROUP BY Pair_EW ORDER BY Avg_Pct_EW DESC, Board_Count DESC"
					}
				]
			},
			"We_Fixed_Opponents": {
				"title": "We Fixed Opponents",
				"help": "**Showing boards which your partnership stumbled but did well anyways.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, pct, Par, tricks, dd tricks, sd score, sd score max, sd contract max. Show those boards we played and score < Par and pct > .70.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Pct_{Pair_Direction}, Par_{Pair_Direction}, Tricks, DD_Tricks, EV_Max_{Pair_Direction}, EV_Max_{Pair_Direction}, EV_Max_Col FROM self WHERE Boards_We_Played = True AND Score_{Pair_Direction} < Par_{Pair_Direction} AND Pct_{Pair_Direction} > .70 ORDER BY Board"
					}
				]
			},
			"We_Got_Fixed": {
				"title": "We Got Fixed",
				"comment": "ToDo: Add prompt? If declarer, dropped trick, wrong contract or missed sacrifice.",
				"help": "**Showing boards which your partnership stumbled and got punished.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, pct, Par, tricks, dd tricks, sd score, sd score max, sd contract max. Show those boards we played and score < Par and pct < .30.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Pct_{Pair_Direction}, Par_{Pair_Direction}, Tricks, DD_Tricks, EV_Max_{Pair_Direction}, EV_Max_{Pair_Direction}, EV_Max_Col FROM self WHERE Boards_We_Played = True AND Score_{Pair_Direction} < Par_{Pair_Direction} AND Pct_{Pair_Direction} < 0.30 ORDER BY Board"
					}
				]
			},
			"Our_Mistakes": {
				"title": "Our Mistakes",
				"help": "**Showing boards your partnership messed up on defense or competitive bidding.**",
				"prompts": [
					{
						"prompt": "Show board, contract, pct, score, tricks, dd tricks, Par, sd score, sd score max, sd contract max. Show those boards opponent declared and score < Par and score < sd score.",
						"sql": "SELECT Board, Contract, Pct_{Pair_Direction}, Score_{Pair_Direction}, Tricks, DD_Tricks, Par_{Pair_Direction}, EV_Max_{Pair_Direction}, EV_Max_{Pair_Direction}, EV_Max_Col FROM self WHERE Boards_Opponent_Declared = True AND Score_{Pair_Direction} < Par_{Pair_Direction} AND Score_{Pair_Direction} < EV_Max_{Pair_Direction} ORDER BY Board"
					}
				]
			},
			"We_Underbid": {
				"title": "We Underbid",
				"help": "**Showing boards your partnership declared but messed up on the contract or play.**",
				"prompts": [
					{
						"prompt": "Show board, contract, pct, score, tricks, dd tricks, Par, sd score, sd score max, sd contract max. Show those boards we declared and score > 0 and score < Par and score < sd score.",
						"sql": "SELECT Board, Contract, Pct_{Pair_Direction}, Score_{Pair_Direction}, Tricks, DD_Tricks, Par_{Pair_Direction}, EV_Max_{Pair_Direction}, EV_Max_{Pair_Direction}, EV_Max_Col FROM self WHERE Boards_We_Declared = True AND Score_{Pair_Direction} > 0 AND Score_{Pair_Direction} < Par_{Pair_Direction} AND Score_{Pair_Direction} < EV_Max_{Pair_Direction} ORDER BY Board"
					}
				]
			},
			"Opponent_Underbid": {
				"title": "Opponent Underbid",
				"help": "**Showing boards your opponent either underbid, arrived at inferior contract or should have penalty doubled. Boards shown from opponents perspective.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, sd score, sd score max, sd contract max. Show those boards opponent declared and score > 0 and score < Par and score < sd score.",
						"sql": "SELECT Board, Contract, Score_{Opponent_Pair_Direction}, Par_{Opponent_Pair_Direction}, EV_Max_{Opponent_Pair_Direction}, EV_Max_{Opponent_Pair_Direction}, EV_Max_Col FROM self WHERE Boards_Opponent_Declared = True AND Score_{Opponent_Pair_Direction} > 0 AND Score_{Opponent_Pair_Direction} < Par_{Opponent_Pair_Direction} AND Score_{Opponent_Pair_Direction} < EV_Max_{Opponent_Pair_Direction} ORDER BY Board"
					}
				]
			},
			"Boards_I_Declared": {
				"title": "Boards I Declared",
				"help": "**Showing boards which you declared.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct, DD score, tricks, DD tricks. Show those boards I declared.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, DD_Score_{Pair_Direction}, Tricks, DD_Tricks FROM self WHERE Boards_I_Declared = True ORDER BY Board"
					}
				]
			},
			"Boards_Partner_Declared": {
				"title": "Boards Partner Declared",
				"help": "**Showing boards your partner declared.**",
				"prompts": [
					{
						"prompt": "Show board, contract, score, Par, pct, Par pct, sd pct, DD score, tricks, DD tricks. Show those boards partner declared.",
						"sql": "SELECT Board, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, DD_Score_{Pair_Direction}, Tricks, DD_Tricks FROM self WHERE Boards_Partner_Declared = True ORDER BY Board"
					}
				]
			},
			"Actual_Score_Pcts": {
				"title": "Actual Score Pcts",
				"help": "**Showing average actual pcts for contract.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT AVG(CASE WHEN Our_Boards THEN Pct_{Pair_Direction} ELSE NULL END) AS Avg_Of_All_Our_Boards, AVG(CASE WHEN Boards_We_Declared THEN Pct_{Pair_Direction} ELSE NULL END) AS Avg_Of_Boards_We_Declared, AVG(CASE WHEN Boards_I_Declared THEN Pct_{Pair_Direction} ELSE NULL END) AS Avg_Of_Boards_I_Declared, AVG(CASE WHEN Boards_Partner_Declared THEN Pct_{Pair_Direction} ELSE NULL END) AS Avg_Of_Boards_Partner_Declared FROM self"
					}
				]
			},
			"DD_Score_Pcts": {
				"title": "Double Dummy (DD) Score Pcts for Contract",
				"help": "**Showing average double dummy (DD) score pcts for contract.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT AVG(CASE WHEN Boards_We_Declared THEN MP_DD_Pct_Declarer ELSE NULL END) AS Avg_DD_Pct_Of_Boards_We_Declared, AVG(CASE WHEN Boards_I_Declared THEN MP_DD_Pct_Declarer ELSE NULL END) AS Avg_DD_Pct_Of_Boards_I_Declared, AVG(CASE WHEN Boards_Partner_Declared THEN MP_DD_Pct_Declarer ELSE NULL END) AS Avg_DD_Pct_Of_Boards_Partner_Declared FROM self"
					}
				]
			},
			"Par_Score_Pcts": {
				"title": "Par Score Pcts in Par Strain",
				"help": "**Showing average par score pcts in par strain.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT AVG(CASE WHEN Boards_We_Declared THEN MP_Par_Pct_Declarer ELSE NULL END) AS Avg_Par_Pct_Of_Boards_We_Declared, AVG(CASE WHEN Boards_I_Declared THEN MP_Par_Pct_Declarer ELSE NULL END) AS Avg_Par_Pct_Of_Boards_I_Declared, AVG(CASE WHEN Boards_Partner_Declared THEN MP_Par_Pct_Declarer ELSE NULL END) AS Avg_Par_Pct_Of_Boards_Partner_Declared FROM self"
					}
				]
			},
			"EV_Pcts": {
				"title": "Expected Value (EV) Pcts in Contract's Strain",
				"help": "**Showing average Expected Value (EV) score pcts in contract's strain.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT AVG(CASE WHEN Boards_We_Declared THEN MP_EV_Pct_Declarer ELSE NULL END) AS Avg_EV_Pct_Of_Boards_We_Declared, AVG(CASE WHEN Boards_I_Declared THEN MP_EV_Pct_Declarer ELSE NULL END) AS Avg_EV_Pct_Of_Boards_I_Declared, AVG(CASE WHEN Boards_Partner_Declared THEN MP_EV_Pct_Declarer ELSE NULL END) AS Avg_EV_Pct_Of_Boards_Partner_Declared FROM self"
					}
				]
			},
			"EV_Max_Pcts": {
				"title": "Expected Value (EV) Pcts Optimal Contract",
				"help": "**Showing average Expected Value (EV) score pcts in optimal contract.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT AVG(CASE WHEN Boards_We_Declared THEN EV_Pct_Max_{Pair_Direction} ELSE NULL END) AS Avg_EV_Pct_Max_Of_Boards_We_Declared, AVG(CASE WHEN Boards_I_Declared THEN EV_Pct_Max_{Pair_Direction} ELSE NULL END) AS Avg_EV_Pct_Max_Of_Boards_I_Declared, AVG(CASE WHEN Boards_Partner_Declared THEN EV_Pct_Max_{Pair_Direction} ELSE NULL END) AS Avg_EV_Pct_Max_Of_Boards_Partner_Declared FROM self"
					}
				]
			},
			"Expected_Value_Our_Boards": {
				"title": "Expected Value (EV) Analysis of Our Boards",
				"help": "**Showing Expected Value (EV) analysis of our boards. EV_Pct_Max_Diff is an expert's statistic. It is the percentage difference between actual and probable percentages. Higher values are your luckiest boards.**",
				"prompts": [
					{
						"prompt": "Show board, ev max pct diff, contract, score, Par, pct, Par pct, sd pct, dd tricks, sd Par pct diff, sd score, sd probs taking_* sort by sd pct diff descending. Show those boards we played.",
						"sql": "SELECT Board, EV_Pct_Max_Diff_{Pair_Direction}, Contract, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, section_name, Pair_Number_NS, Pair_Number_EW, EV_Pct_Max_{Pair_Direction}, DD_Tricks, EV_Max_{Pair_Direction}, Prob_Taking_0, Prob_Taking_1, Prob_Taking_2, Prob_Taking_3, Prob_Taking_4, Prob_Taking_5, Prob_Taking_6, Prob_Taking_7, Prob_Taking_8, Prob_Taking_9, Prob_Taking_10, Prob_Taking_11, Prob_Taking_12, Prob_Taking_13 FROM self WHERE Boards_We_Played = True ORDER BY EV_Pct_Max_Diff_{Pair_Direction} DESC"
					}
				]
			},
			"Expected_Value_All_Boards": {
				"title": "Expected Value (EV) Analysis of All Boards at All Tables By Strain",
				"help": "**Showing Expected Value (EV) analysis of all boards at all tables by strain. EV_Pct_Max_Diff is an expert's statistic. It is the percentage difference between actual and probable percentages. Higher values are your luckiest boards.**",
				"prompts": [
					{
						"prompt": "Show board, bidsuit, contract, score, pct, section_name, pair_number_ns, pair_number_ew, sd score, sd pct diff, sd pct, dd tricks, sd probs taking_* sort by board, bidsuit, sd pct diff descending.",
						"sql": "SELECT Board, BidSuit, Contract, Score_{Pair_Direction}, Pct_{Pair_Direction}, section_name, Pair_Number_NS, Pair_Number_EW, EV_Max_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, EV_Pct_Max_Diff_{Pair_Direction}, DD_Pct_Max_Diff_{Pair_Direction}, DD_EV_Pct_Max_Diff_{Pair_Direction}, DD_Tricks, Prob_Taking_0, Prob_Taking_1, Prob_Taking_2, Prob_Taking_3, Prob_Taking_4, Prob_Taking_5, Prob_Taking_6, Prob_Taking_7, Prob_Taking_8, Prob_Taking_9, Prob_Taking_10, Prob_Taking_11, Prob_Taking_12, Prob_Taking_13 FROM self WHERE Pair_Number_{Pair_Direction} IS NOT NULL ORDER BY Board, BidSuit, EV_Pct_Max_Diff_{Pair_Direction} DESC"
					}
				]
			},
			"Frequency_of_Contracts": {
				"title": "Frequency of Contracts of All Boards at All Tables",
				"help": "**Showing frequency of contracts of all boards at all tables.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Board, COUNT(Contract) AS Freq_Contract, Contract, ANY_VALUE(Par_{Pair_Direction}) AS Par_{Pair_Direction}, ANY_VALUE(Par_Pct_{Pair_Direction}) AS Par_Pct_{Pair_Direction}, ANY_VALUE(EV_Max_{Pair_Direction}) AS EV_Max_{Pair_Direction}, ANY_VALUE(EV_Pct_Max_Diff_{Pair_Direction}) AS EV_Pct_Max_Diff_{Pair_Direction}, ANY_VALUE(EV_Pct_Max_{Pair_Direction}) AS EV_Pct_Max_{Pair_Direction}, ANY_VALUE(DD_Tricks) AS DD_Tricks, ANY_VALUE(Prob_Taking_0) AS Prob_Taking_0, ANY_VALUE(Prob_Taking_1) AS Prob_Taking_1, ANY_VALUE(Prob_Taking_2) AS Prob_Taking_2, ANY_VALUE(Prob_Taking_3) AS Prob_Taking_3, ANY_VALUE(Prob_Taking_4) AS Prob_Taking_4, ANY_VALUE(Prob_Taking_5) AS Prob_Taking_5, ANY_VALUE(Prob_Taking_6) AS Prob_Taking_6, ANY_VALUE(Prob_Taking_7) AS Prob_Taking_7, ANY_VALUE(Prob_Taking_8) AS Prob_Taking_8, ANY_VALUE(Prob_Taking_9) AS Prob_Taking_9, ANY_VALUE(Prob_Taking_10) AS Prob_Taking_10, ANY_VALUE(Prob_Taking_11) AS Prob_Taking_11, ANY_VALUE(Prob_Taking_12) AS Prob_Taking_12, ANY_VALUE(Prob_Taking_13) AS Prob_Taking_13 FROM self GROUP BY Board, Contract ORDER BY Board, Contract"
					}
				]
			},
			"Wrong_Side": {
				"title": "Boards Played from Wrong Side",
				"help": "**Showing boards played from wrong side (DD tricks declarer < DD tricks dummy).**",
				"comment": "Todo: Looks like opponent's par score and sd score is presented as our score. Needs to be in declarer's direction or break into NS and EW?",
				"prompts": [
					{
						"prompt": "Show board, contract, result, score, Par, pct, Par pct, sd pct, dd tricks, dd tricks dummy. Show those boards we played and dd tricks < dd tricks dummy.",
						"sql": "SELECT Board, Contract, Result, Score_{Pair_Direction}, Par_{Pair_Direction}, Pct_{Pair_Direction}, Par_Pct_{Pair_Direction}, EV_Pct_Max_{Pair_Direction}, DD_Tricks, DD_Tricks_Dummy FROM self WHERE Boards_We_Played = True AND DD_Tricks < DD_Tricks_Dummy ORDER BY Board"
					}
				]
			},
			"Hand_Evaluation_Metrics": {
				"title": "Hand Evaluation Metrics",
				"help": "**Showing hand evaluation metrics such AS HCP, QT (Quick Tricks), DP (Distribution Points).**",
				"prompts": [
					{
						"prompt": "Show distinct board and all directions of HCP, QT, DP.",
						"sql": "SELECT DISTINCT Board, HCP_{Pair_Direction}, HCP_{Opponent_Pair_Direction}, QT_{Pair_Direction}, QT_{Opponent_Pair_Direction}, DP_{Pair_Direction}, DP_{Opponent_Pair_Direction} FROM self ORDER BY Board"
					}
				]
			},
			"Pct_Per_Round": {
				"title": "Pct per Round",
				"help": "**Showing your matchpoint percentage per round.**",
				"comment": "",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_{Opponent_Pair_Direction}, ' - ', (SELECT STRING_AGG(value.unnest, ' - ') FROM UNNEST(Player_Names_{Opponent_Pair_Direction}) as value)) as Opponents, AVG(Pct_{Pair_Direction}) AS Avg_Pct_{Pair_Direction}, STRING_AGG(Board, ', ') AS Boards, STRING_AGG(ROUND(Pct_{Pair_Direction},2), ', ') AS Pcts_{Pair_Direction} FROM self WHERE Boards_We_Played = True GROUP BY section_name, Pair_Number_{Opponent_Pair_Direction}, Player_Names_{Opponent_Pair_Direction} ORDER BY section_name, Pair_Number_{Opponent_Pair_Direction}"
					}
				]
			},
			"Unique_Bids_All_Boards": {
				"title": "Unique Bids of All Boards at All Tables",
				"help": "**Showing all boards at all tables having unique bids per strain and contract type.**",
				"comment": "Too difficult to devise a user friendly prompt using ChatGPT 3.5 Turbo. Must use near total SQL. GPT4 seems to get it right most of the time but too costly. Need x.Pct because x.pct doesn't work.",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT x.Board, x.BidSuit, x.ContractType, y.Contract, y.Pct_{Pair_Direction}, y.section_name, y.Pair_Number_NS, y.Pair_Number_EW FROM ((SELECT Board, BidSuit, ContractType FROM self GROUP BY Board, BidSuit, ContractType HAVING COUNT(*) = 1) AS x LEFT JOIN (SELECT * FROM self) AS y ON (x.Board, x.BidSuit, x.ContractType) = (y.Board, y.BidSuit, y.ContractType)) ORDER BY x.Board"
					}
				]
			},
			"Unique_Bids_We_Played": {
				"title": "Unique Bids You Played",
				"help": "**Showing boards which you played, at your table, having unique bids per strain and contract type.**",
				"comment": "Too difficult to devise a user friendly prompt using ChatGPT 3.5 Turbo. Must use near total SQL. GPT4 seems to get it right most of the time but too costly. Need x.Pct because x.pct doesn't work.",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT x.Board, x.BidSuit, x.ContractType, y.Contract, y.Pct_{Pair_Direction}, y.section_name, y.Pair_Number_NS, y.Pair_Number_EW, y.Boards_I_Played FROM ((SELECT Board, BidSuit, ContractType FROM self GROUP BY Board, BidSuit, ContractType HAVING COUNT(*) = 1) AS x LEFT JOIN (SELECT * FROM self) AS y ON (x.Board, x.BidSuit, x.ContractType) = (y.Board, y.BidSuit, y.ContractType)) WHERE y.Boards_I_Played=TRUE ORDER BY x.Board"
					}
				]
			},
			"Unique_Bids_We_Declared": {
				"title": "Unique Bids You Declared",
				"help": "**Showing boards, which your partnership declared, having unique bids per strain and contract type.**",
				"comment": "Too difficult to devise a user friendly prompt using ChatGPT 3.5 Turbo. Must use near total SQL. GPT4 seems to get it right most of the time but too costly. Need x.Pct because x.pct doesn't work.",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT x.Board, x.BidSuit, x.ContractType, y.Contract, y.Pct_{Pair_Direction}, y.section_name, y.Pair_Number_NS, y.Pair_Number_EW, y.Boards_We_Declared FROM ((SELECT Board, BidSuit, ContractType FROM self GROUP BY Board, BidSuit, ContractType HAVING COUNT(*) = 1) AS x LEFT JOIN (SELECT * FROM self) AS y ON (x.Board, x.BidSuit, x.ContractType) = (y.Board, y.BidSuit, y.ContractType)) WHERE y.Boards_We_Declared=TRUE ORDER BY x.Board"
					}
				]
			},
			"Par_Rankings": {
				"title": "Rank Pairs by Par Success",
				"help": "**Ranking pairs (NS, EW) having the most scores greater than or equal to Par.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' - ', Player_Name_S) AS Pair_NS, COUNT(CASE WHEN Score_NS>=Par_NS THEN 1 ELSE NULL END) AS Count_GE, AVG(Pct_NS) AS Pct, STRING_AGG(CASE WHEN Score_NS>Par_NS THEN Board END, ', ') AS Boards_GT, STRING_AGG(CASE WHEN Score_NS=Par_NS THEN Board END, ', ') AS Boards_EQ, STRING_AGG(CASE WHEN Score_NS < Par_NS THEN Board END, ', ') AS Boards_LT, COUNT(CASE WHEN Score_NS=Par_NS THEN 1 ELSE NULL END) AS Count_EQ FROM self GROUP BY Pair_NS ORDER BY Count_GE DESC, Count_EQ"
					},
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_EW, ' - ', Player_Name_E, ' - ', Player_Name_W) AS Pair_EW, COUNT(CASE WHEN Score_EW>=Par_EW THEN 1 ELSE NULL END) AS Count_GE, AVG(Pct_EW) AS Pct, STRING_AGG(CASE WHEN Score_EW>Par_EW THEN Board END, ', ') AS Boards_GT, STRING_AGG(CASE WHEN Score_EW=Par_EW THEN Board END, ', ') AS Boards_EQ, STRING_AGG(CASE WHEN Score_EW < Par_EW THEN Board END, ', ') AS Boards_LT, COUNT(CASE WHEN Score_EW=Par_EW THEN 1 ELSE NULL END) AS Count_EQ FROM self GROUP BY Pair_EW ORDER BY Count_GE DESC, Count_EQ"
					}
				]
			},
			"Declarer_Rankings": {
				"title": "Rank Declarers by Pct",
				"help": "**Ranking declarers by average percent who played 4 or more boards.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Name_Declarer AS Name, CASE WHEN Declarer_Direction IN ('N', 'S') THEN AVG(Pct_NS) ELSE AVG(Pct_EW) END AS Avg_Pct, COUNT(*) AS Count, Number_Declarer AS Declarer, Declarer_Direction AS Direction, AVG(CAST(Tricks > DD_Tricks AS INT)) AS Pct_GT_DD, AVG(CAST(Tricks = DD_Tricks AS INT)) AS Pct_EQ_DD, AVG(CAST(Score_Declarer > Par_Declarer AS INT)) AS Pct_GT_Par, AVG(CAST(Score_Declarer = Par_Declarer AS INT)) AS Pct_EQ_Par FROM self GROUP BY Number_Declarer, Name_Declarer, Declarer_Direction HAVING COUNT(*) >= 4 ORDER BY Avg_Pct DESC"
					}
				]
			},
			"Scoring_Errors": {
				"title": "Showing Possible Scoring Errors or Adjustments",
				"help": "**Scoring errors or adjustments.**",
				"prompts": [
					{
						"failed prompt": "show board, contract, score_declarer, computed_score_declarer, score_ns, score_ew when score_declarer <> computed_score_declarer or score_ns <> -score_ew sort by board.",
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' - ', Player_Name_S) AS Pair_NS, CONCAT(section_name, Pair_Number_EW, ' - ', Player_Name_E, ' - ', Player_Name_W) AS Pair_EW, Board, Contract, Score_Declarer, Computed_Score_Declarer, Score_NS, Score_EW, Result FROM self WHERE Contract IS NULL OR Score_Declarer IS NULL OR Score_Declarer <> Computed_Score_Declarer OR Score_NS <> -Score_EW ORDER BY Board"
					}
				]
			},
			"Overall_Rankings_Predictions": {
				"title": "Overall Rankings Predictions",
				"help": "**Predicted final overall rankings (NS, EW). Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' - ', Player_Name_S) AS Pair_NS, AVG(Pct_NS_Actual) AS Avg_Pct_NS_Actual, AVG(Pct_NS_Pred) AS Avg_Pct_NS_Pred, AVG(Pct_NS_Diff) AS Avg_Pct_NS_Diff FROM self GROUP BY Pair_NS ORDER BY Avg_Pct_NS_Actual DESC"
					},
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_EW, ' - ', Player_Name_E, ' - ', Player_Name_W) AS Pair_EW, AVG(Pct_EW_Actual) AS Avg_Pct_EW_Actual, AVG(Pct_EW_Pred) AS Avg_Pct_EW_Pred, AVG(Pct_EW_Diff) AS Avg_Pct_EW_Diff FROM self GROUP BY Pair_EW ORDER BY Avg_Pct_EW_Actual DESC"
					}
				]
			},
			"Board_Results_Predictions": {
				"title": "Board Results Predictions",
				"help": "**Predicted board results percentages (NS, EW). Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' - ', Player_Name_S) AS Pair_NS, Board, Contract, Score_NS, Pct_NS_Actual, Pct_NS_Pred, Pct_NS_Diff, Declarer_Direction_Pred, Pair_Number_NS, Pair_Number_EW FROM self ORDER BY Board, Pair_NS"
					},
					{
						"prompt": "",
						"sql": "SELECT CONCAT(section_name, Pair_Number_EW, ' - ', Player_Name_E, ' - ', Player_Name_W) AS Pair_EW, Board, Contract, Score_EW, Pct_EW_Actual, Pct_EW_Pred, Pct_EW_Diff, Declarer_Direction_Pred, Pair_Number_NS, Pair_Number_EW FROM self ORDER BY Board, Pair_EW"
					}
				]
			},
			"Board_Results_Predictions_Boards_We_Played": {
				"title": "Board Results Predictions for Boards We Played",
				"help": "**Predicted board results percentages. Only boards we played. Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Board, Contract, Score, Declarer_Pct, Declarer_Pct_Pred, Declarer_Direction_Pred, Pair_Number_{Opponent_Pair_Direction}, boards_we_played FROM self WHERE boards_we_played=TRUE ORDER BY Board"
					}
				]
			},
			"Declarer_Direction_Predictions": {
				"title": "Declarer Direction Predictions",
				"help": "**Predicted direction of declarer per board and result. Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Board, Declarer_Direction_Pred AS Pred, Contract, Result, Score_NS, Par_NS, MP_NS, CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' - ', Player_Name_S) AS Pair_NS, CONCAT(section_name, Pair_Number_EW, ' - ', Player_Name_E, ' - ', Player_Name_W) AS Pair_EW FROM self ORDER BY Board, MP_NS DESC"
					}
				]
			},
			"Declarer_Direction_Predictions_Statistics_By_Board": {
				"title": "Declarer Direction Predictions Statistics Per Board",
				"help": "**Statistics on declarer direction predictions per board number. Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Board, ANY_VALUE(Par_NS) AS Par_NS, Declarer_Direction_Pred, COUNT() AS Board_Plays, SUM(CASE WHEN Declarer_Direction = Declarer_Direction_Pred THEN 1 ELSE 0 END) AS Correct_Preds, Correct_Preds/Board_Plays AS Correct_Direction_Pct, SUM(CASE WHEN (Declarer_Direction IN ('N','S') AND Declarer_Direction_Pred IN ('N', 'S')) OR (Declarer_Direction IN ('E','W') AND Declarer_Direction_Pred IN ('E', 'W')) THEN 1 ELSE 0 END) AS Correct_Pair_Preds, Correct_Pair_Preds/Board_Plays AS Correct_Pair_Pct FROM self GROUP BY Board, Declarer_Direction_Pred ORDER BY Board"
					}
				]
			},
			"Declarer_Direction_Predictions_Statistics_By_Actual_Declarer": {
				"title": "Declarer Direction Predictions Statistics Per Actual Declarer",
				"help": "**Statistics on declarer direction predictions per actual declarer. Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT CONCAT(Number_Declarer, ' - ', Name_Declarer, ' - ', Declarer_Direction) AS Player, SUM(CASE WHEN Declarer_Direction = Declarer_Direction_Pred THEN 1 ELSE 0 END) AS Correct_Preds, COUNT() AS Boards_Declared, STRING_AGG(CASE WHEN Declarer_Direction = Declarer_Direction_Pred THEN Board END, ', ') AS Correctly_Pred_Boards, STRING_AGG(CASE WHEN Declarer_Direction <> Declarer_Direction_Pred THEN Board END, ', ') AS Declared_Not_Predicted, Correct_Preds/Boards_Declared AS Correct_Direction_Pct, SUM(CASE WHEN (Declarer_Direction IN ('N','S') AND Declarer_Direction_Pred IN ('N', 'S')) OR (Declarer_Direction IN ('E','W') AND Declarer_Direction_Pred IN ('E', 'W')) THEN 1 ELSE 0 END) AS Correct_Pair_Preds, Correct_Pair_Preds/Boards_Declared AS Correct_Pair_Pct FROM self GROUP BY Number_Declarer, Name_Declarer, Declarer_Direction ORDER BY Correct_Direction_Pct DESC, Boards_Declared DESC"
					}
				]
			},
			"Declarer_Direction_Predictions_Statistics_By_Predicted_Declarer": {
				"title": "Declarer Direction Statistics Per Predicted Predicted Declarer",
				"help": "**Statistics on declarer direction predictions per predicted declarer. Predictions made before game starts.**",
				"comment": "Only difference between this and above is Declared_Not_Predicted vs Predicted_Not_Declared. Learn how to combine.",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT CONCAT(Declarer_Number_Pred, ' - ', Declarer_Name_Pred, ' - ', Declarer_Direction_Pred) AS Player, SUM(CASE WHEN Declarer_Direction = Declarer_Direction_Pred THEN 1 ELSE 0 END) AS Correct_Preds, COUNT() AS Pred_To_Declare, STRING_AGG(CASE WHEN Declarer_Direction = Declarer_Direction_Pred THEN Board END, ', ') AS Correctly_Pred_Boards, STRING_AGG(CASE WHEN Declarer_Direction <> Declarer_Direction_Pred THEN Board END, ', ') AS Predicted_Not_Declared, Correct_Preds/Pred_To_Declare AS Correct_Direction_Pct, SUM(CASE WHEN (Declarer_Direction IN ('N','S') AND Declarer_Direction_Pred IN ('N', 'S')) OR (Declarer_Direction IN ('E','W') AND Declarer_Direction_Pred IN ('E', 'W')) THEN 1 ELSE 0 END) AS Correct_Pair_Preds, Correct_Pair_Preds/Pred_To_Declare AS Correct_Pair_Pct FROM self GROUP BY Declarer_Number_Pred, Declarer_Name_Pred, Declarer_Direction_Pred ORDER BY Correct_Direction_Pct DESC, Pred_To_Declare DESC"
					}
				]
			},
			"Contract_Predictions_Statistics_By_Boards_We_Played": {
				"title": "Contract Predictions Statistics for Boards We Played",
				"help": "**Statistics on contract predictions for boards we played. Experimental. Predictions made before game starts.**",
				"comment": "Need to implement par score, actual contract dd score, predicted contract dd score. Maybe SD scores too.",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Board, CASE WHEN Opponent_Pair_Direction='NS' THEN CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' - ', Player_Name_S) ELSE CONCAT(section_name, Pair_Number_EW, ' - ', Player_Name_E, ' - ', Player_Name_W) END AS Opponents, Contract, Contract_Pred FROM self WHERE Boards_We_Played = True ORDER BY Board, CONCAT(section_name, Pair_Number_NS)"
					}
				]
			},
			"Contract_Predictions_Statistics_By_Board": {
				"title": "Contract Predictions Statistics Per Table",
				"help": "**Statistics on contract predictions per board played. Experimental. Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Board, CONCAT(section_name, Pair_Number_NS, ' - ', Player_Name_N, ' vs ', section_name, Pair_Number_EW, ' - ', Player_Name_E) AS NS_vs_EW, Contract, Contract_Pred FROM self ORDER BY Board, CONCAT(section_name, Pair_Number_NS)"
					}
				]
			},
			"Contract_Predictions_Statistics_By_Board_By_Contract": {
				"title": "Contract Predictions Statistics Per Grouped Contract",
				"help": "**Statistics on contract predictions per board number grouped by contract. Experimental. Predictions made before game starts.**",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Board, Contract, Contract_Pred, COUNT() AS Board_Plays, SUM(CASE WHEN Contract = Contract_Pred THEN 1 ELSE 0 END) AS Correct_Preds, Correct_Preds/Board_Plays AS Correct_Contract_Pct FROM self GROUP BY Board, Contract, Contract_Pred ORDER BY Board"
					}
				]
			},
			"Declarer_Probabilities_Statistics": {
				"title": "Declarer Performance Predictions and Statistics",
				"help": "**Declarer Performance Predictions and Statistics (NS, EW). Predictions made before game starts.**",
				"comment": "Need to scale Pct_NS_Pred and Pct_EW_Pred to 50%.",
				"prompts": [
					{
						"prompt": "",
						"sql": "SELECT Number_Declarer AS Declarer_NS, Name_Declarer AS Name_NS, AVG(Pct_NS) AS Pct_NS_Actual, AVG(Pct_NS_Pred) AS Pct_NS_Pred,  COUNT() AS Boards_Declared, AVG(CAST(Tricks > DD_Tricks AS INT)) AS Pct_GT_DD, AVG(CAST(Tricks = DD_Tricks AS INT)) AS Pct_EQ_DD FROM self WHERE Declarer_Pair_Direction='NS' GROUP BY Number_Declarer, Name_Declarer ORDER BY Pct_NS_Actual DESC, Boards_Declared DESC"
					},
					{
						"prompt": "",
						"sql": "SELECT Number_Declarer AS Declarer_EW, Name_Declarer AS Name_EW, AVG(Pct_EW) AS Pct_EW_Actual, AVG(Pct_EW_Pred) AS Pct_EW_Pred,  COUNT() AS Boards_Declared, AVG(CAST(Tricks > DD_Tricks AS INT)) AS Pct_GT_DD, AVG(CAST(Tricks = DD_Tricks AS INT)) AS Pct_EQ_DD FROM self WHERE Declarer_Pair_Direction='EW' GROUP BY Number_Declarer, Name_Declarer ORDER BY Pct_EW_Actual DESC, Boards_Declared DESC"
					}
				]
			}
		}
	},
	"ToolTips": {
		"Board": "Board number.",
		"Contract": "Contract bid.",
		"Score": "Actual score.",
		"Par": "Par score.",
		"Pct": "Percentage."
	}
}